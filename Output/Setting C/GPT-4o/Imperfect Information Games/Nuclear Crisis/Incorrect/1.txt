```python
# Step 1: Country A makes the first decision to either escalate (E) or ignore (I).
# Step 2: If Country A escalates, Country B then decides to either back down (B) or escalate further (E).
# Step 3: If both escalate, Country A decides between retreating (R) or detonating (D).
# Step 4: Country B, unaware of Country A's decision, decides between retreating (R) or detonating (D).

# Step 5: Since Country B is unaware of Country A's decision in Step 3, we need to group Country B's decision nodes in the same information set.

# Grouping Country B's decision nodes in the same information set:
g.set_infoset(g.root.children[0].children[1].children[0], g.root.children[0].children[1].children[1].infoset)
```

```python
import pygambit as gbt

# Create a new extensive-form game with two players: Country A and Country B
g = gbt.Game.new_tree(players=["Country A", "Country B"],
                      title="Nuclear Crisis Game")

# Step 1: Country A makes the first decision to either escalate (E) or ignore (I).
g.append_move(g.root, "Country A", ["Escalate", "Ignore"])

# Step 2: If Country A escalates, Country B then decides to either back down (B) or escalate further (E).
g.append_move(g.root.children[0], "Country B", ["Back down", "Escalate"])

# Step 3: If both escalate, Country A decides between retreating (R) or detonating (D).
g.append_move(g.root.children[0].children[1], "Country A", ["Retreat", "Detonate"])

# Step 4: Country B, unaware of Country A's decision, decides between retreating (R) or detonating (D).
g.append_move(g.root.children[0].children[1].children[0], "Country B", ["Retreat", "Detonate"])
g.append_move(g.root.children[0].children[1].children[1], "Country B", ["Retreat", "Detonate"])

# Step 5: Since Country B is unaware of Country A's decision in Step 3, we need to group Country B's decision nodes in the same information set.
g.set_infoset(g.root.children[0].children[1].children[0], g.root.children[0].children[1].children[1].infoset)

# Define the outcomes for each terminal node
small_positive = g.add_outcome([1, 1], label="Ignore Provocation")
small_loss_gain = g.add_outcome([2, -1], label="Country B Backs Down")
nuclear_disaster = g.add_outcome([-100, -100], label="Nuclear Disaster")
country_a_wins = g.add_outcome([100, -100], label="Country A Detonates")
country_b_wins = g.add_outcome([-100, 100], label="Country B Detonates")
both_retreat = g.add_outcome([-1, -1], label="Both Retreat")

# Set the outcomes for each terminal node
g.set_outcome(g.root.children[1], small_positive)
g.set_outcome(g.root.children[0].children[0], small_loss_gain)
g.set_outcome(g.root.children[0].children[1].children[0].children[0], both_retreat)
g.set_outcome(g.root.children[0].children[1].children[0].children[1], country_b_wins)
g.set_outcome(g.root.children[0].children[1].children[1].children[0], country_a_wins)
g.set_outcome(g.root.children[0].children[1].children[1].children[1], nuclear_disaster)

# Save the EFG
efg = g.write(format='native')
```