```python
# Step-by-step thought process:

# 1. The game involves two players, A and B, negotiating the division of 10,000 pounds.
# 2. The game is sequential, with A making the first proposal, followed by B's decision.
# 3. If B rejects A's proposal, B makes a counter-proposal, followed by A's decision.
# 4. If A rejects B's counter-proposal, A makes a final proposal, which B must accept.
# 5. There is no simultaneous move or hidden information in this game.
# 6. Since all moves are sequential and there is no hidden information, there are no information sets to be set for imperfect information.

# Therefore, no set_infoset() function is needed for this game.
```

```python
import pygambit as gbt

# Create a new extensive-form game with players A and B
g = gbt.Game.new_tree(players=["A", "B"], title="Negotiation Game")

# A makes the first proposal: A gets 5500, B gets 4500
g.append_move(g.root, "A", ["Propose 5500/4500"])

# B decides to accept or reject A's proposal
g.append_move(g.root.children[0], "B", ["Accept", "Reject"])

# If B accepts, the game ends with payoffs 5500 for A and 4500 for B
g.set_outcome(g.root.children[0].children[0], g.add_outcome([5500, 4500], label="B Accepts A's Proposal"))

# If B rejects, B makes a counter-proposal: equal split of 5000 each
g.append_move(g.root.children[0].children[1], "B", ["Propose 5000/5000"])

# A decides to accept or reject B's counter-proposal
g.append_move(g.root.children[0].children[1].children[0], "A", ["Accept", "Reject"])

# If A accepts, the game ends with payoffs 4750 for both A and B
g.set_outcome(g.root.children[0].children[1].children[0].children[0], g.add_outcome([4750, 4750], label="A Accepts B's Proposal"))

# If A rejects, A makes a final proposal: A gets 5200, B gets 4800
g.append_move(g.root.children[0].children[1].children[0].children[1], "A", ["Propose 5200/4800"])

# B must accept A's final proposal, ending the game with payoffs 4693 for A and 4332 for B
g.set_outcome(g.root.children[0].children[1].children[0].children[1].children[0], g.add_outcome([4693, 4332], label="B Must Accept A's Final Proposal"))

# Save the EFG
efg = g.write(format='native')
```