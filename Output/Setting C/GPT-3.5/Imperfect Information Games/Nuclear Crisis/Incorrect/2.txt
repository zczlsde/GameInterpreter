```python
# Import the necessary library
import pygambit as gbt

# Create a new game tree with two players, Country A and Country B
g = gbt.Game.new_tree(players=["Country A", "Country B"],
                    title="Nuclear Crisis Game")

# Add the initial decision node for Country A to escalate (E) or ignore (I) the provocation
g.append_move(g.root, "Country A", ["E", "I"])

# Add the decision nodes for Country B based on Country A's escalation decision
g.append_move(g.root.children[0], "Country B", ["B", "E"])

# Add the decision nodes for Country A and Country B based on Country B's decision to escalate further
g.append_move(g.root.children[0].children[1], "Country A", ["R", "D"])
g.append_move(g.root.children[0].children[1].children[0], "Country B", ["R", "D"])

# Group the decision nodes for Country A and Country B in the same information set
g.set_infoset(g.root.children[0].children[1], g.root.children[0].children[1].children[0].infoset)
```


```python
# Import the necessary library
import pygambit as gbt

# Create a new game tree with two players, Country A and Country B
g = gbt.Game.new_tree(players=["Country A", "Country B"],
                    title="Nuclear Crisis Game")

# Add the initial decision node for Country A to escalate (E) or ignore (I) the provocation
g.append_move(g.root, "Country A", ["E", "I"])

# Add the decision nodes for Country B based on Country A's escalation decision
g.append_move(g.root.children[0], "Country B", ["B", "E"])

# Add the decision nodes for Country A and Country B based on Country B's decision to escalate further
g.append_move(g.root.children[0].children[1], "Country A", ["R", "D"])
g.append_move(g.root.children[0].children[1].children[0], "Country B", ["R", "D"])

# Group the decision nodes for Country A and Country B in the same information set
g.set_infoset(g.root.children[0].children[1], g.root.children[0].children[1].children[0].infoset)
```