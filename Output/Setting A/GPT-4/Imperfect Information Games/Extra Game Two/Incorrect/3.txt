```python
import pygambit as gbt

# Initialize the game with three players
g = gbt.Game.new_tree(players=["Player 1", "Player 2", "Player 3"],
                      title="Sequential game with imperfect information")

# First stage: Player 1 chooses among A, B, and C
g.append_move(g.root, "Player 1", ["A", "B", "C"])

# Second stage: Player 2 chooses between D and E without knowing Player 1's choice
# Since Player 2's decision is made without knowing Player 1's choice, all Player 2's moves are in the same information set.
# We create moves for each of Player 1's actions leading to Player 2's decision.
for node in g.root.children:
    g.append_move(node, "Player 2", ["D", "E"])

# Third stage: Player 1 chooses between F and G, again without knowing Player 2's choice
# This implies that Player 1's decisions after Player 2's moves are also in the same information set.
# We create moves for each of Player 2's actions leading to Player 1's decision.
for child in g.root.children:
    for node in child.children:
        g.append_move(node, "Player 1", ["F", "G"])

# Fourth stage: Player 3 decides between Q and W
# Player 3's decision is straightforward and does not involve imperfect information at this point.
for child in g.root.children:
    for node in child.children:
        for subnode in node.children:
            g.append_move(subnode, "Player 3", ["Q", "W"])

# Setting outcomes based on Player 3's choices
# If Player 3 selects Q, all players receive a payoff of 3.
# If Player 3 selects W, Player 1 and Player 2 each receive a payoff of 2, while Player 3 gets 3.
for child in g.root.children:
    for node in child.children:
        for subnode in node.children:
            g.set_outcome(subnode.children[0], g.add_outcome([3, 3, 3], label="All get 3"))
            g.set_outcome(subnode.children[1], g.add_outcome([2, 2, 3], label="P1 and P2 get 2, P3 gets 3"))

# Handling imperfect information
# Player 2's decision is made without knowing Player 1's choice, so all of Player 2's decisions are in the same information set.
# Similarly, Player 1's decisions in the third stage are made without knowing Player 2's choice, so they are also in the same information set.
# We use the provided code to set the information sets correctly.
for i in range(1, len(g.root.children)):
    g.set_infoset(g.root.children[0].children[0], g.root.children[i].children[0].infoset)
    g.set_infoset(g.root.children[0].children[1], g.root.children[i].children[1].infoset)

for child in g.root.children:
    for i in range(1, len(child.children)):
        g.set_infoset(child.children[0].children[0], child.children[i].children[0].infoset)
        g.set_infoset(child.children[0].children[1], child.children[i].children[1].infoset)

# Save the EFG
efg = g.write(format='native')
```

This code snippet constructs an extensive-form game with three players where decisions are made sequentially, and there are stages with imperfect information. The game starts with Player 1 choosing among three actions, followed by Player 2 making a choice without knowing Player 1's action, then Player 1 again without knowing Player 2's choice, and finally Player 3 making a decision. The payoffs are determined by Player 3's final choice. Imperfect information is handled by grouping decisions into the same information set where decisions are made without knowledge of previous actions.