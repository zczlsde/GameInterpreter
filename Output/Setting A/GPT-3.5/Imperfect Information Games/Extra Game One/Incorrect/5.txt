```python
import pygambit as gbt

# Create a new extensive-form game with two players
g = gbt.Game.new_tree(players=["Player 1", "Player 2"],
                    title="Imperfect information game")

# Player 1's actions at the root node
g.append_move(g.root, "Player 1", ["A", "B", "C"])

# Player 2's actions after Player 1 chooses action A
g.append_move(g.root.children[0], "Player 2", ["D", "E", "F"])
# Player 2's actions after Player 1 chooses action B or C
g.append_move(g.root.children[1], "Player 2", ["D", "E", "F"])

# Player 1's actions after Player 2 chooses D or E
g.append_move(g.root.children[0].children[0], "Player 1", ["G", "H"])
g.append_move(g.root.children[0].children[1], "Player 1", ["G", "H"])

# Player 2's actions after Player 1 chooses G
g.append_move(g.root.children[0].children[0].children[0], "Player 2", ["Q", "W"])

# Set information sets for Player 2 after Player 1's actions B or C
g.set_infoset(g.root.children[1], g.root.children[0].infoset)

# Set information sets for Player 1 after Player 2's actions D or E
g.set_infoset(g.root.children[0].children[0], g.root.children[0].children[1].infoset)

# Set outcomes for the game
g.set_outcome(g.root.children[0].children[1].children[1], g.add_outcome([2, -1], label="Player 1 chooses H"))
g.set_outcome(g.root.children[0].children[0].children[0].children[0], g.add_outcome([3, 3], label="Player 1 chooses G, Player 2 chooses Q"))
g.set_outcome(g.root.children[0].children[0].children[0].children[1], g.add_outcome([0, 0], label="Player 1 chooses G, Player 2 chooses W"))

# Save the EFG
efg = g.write(format='native')
```