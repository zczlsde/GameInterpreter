```python
import pygambit as gbt

# Create a new game tree with two players, Alice and Bob.
g = gbt.Game.new_tree(players=["Alice", "Bob"], title="Three Card Poker Game")

# Append a chance node for the initial card distribution with six possible outcomes.
# Each outcome has a probability of 1/6.
g.append_move(g.root, g.players.chance, ["JQ", "JK", "QJ", "QK", "KJ", "KQ"])
g.set_chance_probs(g.root.infoset, [gbt.Rational(1, 6) for _ in range(6)])

# For each outcome of the chance node, append moves for Alice to either check or bet.
for chance_node in g.root.children:
    g.append_move(chance_node, "Alice", ["Check", "Bet"])

    # If Alice checks, append moves for Bob to either check or bet.
    alice_check_node = chance_node.children[0]
    g.append_move(alice_check_node, "Bob", ["Check", "Bet"])

    # If Bob checks, the game ends and the higher card wins 1 from the other player.
    # If Bob bets, Alice can fold or call.
    bob_check_node = alice_check_node.children[0]
    bob_bet_node = alice_check_node.children[1]
    g.append_move(bob_bet_node, "Alice", ["Fold", "Call"])

    # If Alice bets, append moves for Bob to either fold or call.
    alice_bet_node = chance_node.children[1]
    g.append_move(alice_bet_node, "Bob", ["Fold", "Call"])

    # Now, set outcomes for all terminal nodes.
    # Note: The actual payoffs depend on the card distribution and the actions taken.
    # For simplicity, we label outcomes without specifying detailed payoffs.
    # In a real implementation, you would calculate payoffs based on the card distribution and actions.
    g.set_outcome(bob_check_node, g.add_outcome(None, label="Higher card wins 1"))
    g.set_outcome(bob_bet_node.children[0], g.add_outcome(None, label="Bob wins 1"))
    g.set_outcome(bob_bet_node.children[1], g.add_outcome(None, label="Higher card wins 2"))
    g.set_outcome(alice_bet_node.children[0], g.add_outcome(None, label="Alice wins 1"))
    g.set_outcome(alice_bet_node.children[1], g.add_outcome(None, label="Higher card wins 2"))

# Save the EFG
efg = g.write(format='native')
```

This code snippet creates a game tree for a simplified three-card poker game involving Alice and Bob, with a chance node representing the initial card distribution. The game tree includes decisions for Alice to check or bet, followed by decisions for Bob to check or bet if Alice checks, and decisions for Alice to fold or call if Bob bets. If Alice bets, Bob can fold or call. The outcomes are labeled generically, as the actual payoffs would depend on the specific card distribution and the actions taken by the players.