```python
import pygambit as gbt

# Create a new game with two players: Country A and Country B
g = gbt.Game.new_tree(players=["Country A", "Country B"], title="Diplomatic Strategy Game")

# Country B decides whether to Accept the status quo or Rebel
g.append_move(g.root, "Country B", ["Accept", "Rebel"])

# If Country B accepts, Country A can choose to continue to Tax or Drop Taxes
g.append_move(g.root.children[0], "Country A", ["Tax", "Drop Taxes"])
# Set outcomes for Country A's decisions after Country B accepts
g.set_outcome(g.root.children[0].children[0], g.add_outcome([6, -2], label="Tax"))
g.set_outcome(g.root.children[0].children[1], g.add_outcome([4, 0], label="Drop Taxes"))

# If Country B rebels, Country A can choose to Grant Independence or Suppress the rebellion
g.append_move(g.root.children[1], "Country A", ["Grant Independence", "Suppress"])

# Set outcome for Granting Independence
g.set_outcome(g.root.children[1].children[0], g.add_outcome([0, 3], label="Grant Independence"))

# If Country A tries to Suppress the rebellion, a move of nature determines the outcome of the war
# Append a chance node for the war outcome
g.append_move(g.root.children[1].children[1], g.players.chance, ["B Wins", "A Wins"])
# Set the probabilities for the outcomes of the war
g.set_chance_probs(g.root.children[1].children[1].infoset, [gbt.Rational(3, 10), gbt.Rational(7, 10)])

# Set outcomes for the war
# If Country B wins
g.set_outcome(g.root.children[1].children[1].children[0], g.add_outcome([-1, -3], label="B Wins War"))
# If Country A wins
g.set_outcome(g.root.children[1].children[1].children[1], g.add_outcome([-1, -5], label="A Wins War"))

# Save the EFG
efg = g.write(format='native')
```

This code snippet creates an extensive form game (EFG) that models the strategic interactions between two countries, Country A and Country B, using the PyGambit library. The game begins with Country B deciding whether to accept the status quo or rebel. Depending on Country B's decision, Country A then makes choices that lead to different outcomes, including a potential war determined by a chance move. The probabilities of the war's outcomes are represented using `gbt.Rational` to accurately reflect the chances of each country winning.