```python
import pygambit as gbt

# Create a new extensive-form game with two players: Alice and Bob
g = gbt.Game.new_tree(players=["Alice", "Bob"], title="Stone Game")

# Alice starts the game with the option to take one or two stones
g.append_move(g.root, "Alice", ["Take 1", "Take 2"])

# If Alice takes one stone, Bob has the option to take one or two stones
g.append_move(g.root.children[0], "Bob", ["Take 1", "Take 2"])

# If Bob takes one stone, Alice again has the option to take one or two stones
g.append_move(g.root.children[0].children[0], "Alice", ["Take 1", "Take 2"])

# If Alice takes one stone, Bob can take one or two stones
g.append_move(g.root.children[0].children[0].children[0], "Bob", ["Take 1", "Take 2"])

# If Bob takes one stone, Alice can only take one stone and loses
g.append_move(g.root.children[0].children[0].children[0].children[0], "Alice", ["Take 1"])
g.set_outcome(g.root.children[0].children[0].children[0].children[0].children[0], g.add_outcome([-1, 1], label="Alice loses"))

# If Bob takes two stones, Bob loses
g.set_outcome(g.root.children[0].children[0].children[0].children[1], g.add_outcome([1, -1], label="Bob loses"))

# If Alice takes two stones, Bob can take one stone and loses
g.append_move(g.root.children[0].children[0].children[1], "Bob", ["Take 1"])
g.set_outcome(g.root.children[0].children[0].children[1].children[0], g.add_outcome([1, -1], label="Bob loses"))

# If Bob takes two stones, Alice can take one or two stones
g.append_move(g.root.children[0].children[1], "Alice", ["Take 1", "Take 2"])

# If Alice takes one stone, Bob can take one stone and loses
g.append_move(g.root.children[0].children[1].children[0], "Bob", ["Take 1"])
g.set_outcome(g.root.children[0].children[1].children[0].children[0], g.add_outcome([1, -1], label="Bob loses"))

# If Alice takes two stones, Alice loses
g.set_outcome(g.root.children[0].children[1].children[1], g.add_outcome([-1, 1], label="Alice loses"))

# If Alice takes two stones initially, Bob can take one or two stones
g.append_move(g.root.children[1], "Bob", ["Take 1", "Take 2"])

# If Bob takes one stone, Alice can take one or two stones
g.append_move(g.root.children[1].children[0], "Alice", ["Take 1", "Take 2"])

# If Alice takes one stone, Bob can take one stone and loses
g.append_move(g.root.children[1].children[0].children[0], "Bob", ["Take 1"])
g.set_outcome(g.root.children[1].children[0].children[0].children[0], g.add_outcome([1, -1], label="Bob loses"))

# If Alice takes two stones, Alice loses
g.set_outcome(g.root.children[1].children[0].children[1], g.add_outcome([-1, 1], label="Alice loses"))

# If Bob takes two stones, Alice can take one stone and loses
g.append_move(g.root.children[1].children[1], "Alice", ["Take 1"])
g.set_outcome(g.root.children[1].children[1].children[0], g.add_outcome([-1, 1], label="Alice loses"))

# Save the EFG
efg = g.write(format='native')
```