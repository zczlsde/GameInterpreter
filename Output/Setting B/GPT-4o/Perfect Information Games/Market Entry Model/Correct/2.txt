```python
import pygambit as gbt

# Create a new game tree with two players: Firm 1 and Firm 2
g = gbt.Game.new_tree(players=["Firm 1", "Firm 2"], title="Market Entry Game")

# Firm 2 decides whether to enter the market or stay out
g.append_move(g.root, "Firm 2", ["Enter", "Stay Out"])

# If Firm 2 enters, Firm 1 decides whether to Fight or Accommodate
g.append_move(g.root.children[0], "Firm 1", ["Fight", "Accommodate"])

# Define the payoffs for each outcome
# If Firm 2 stays out, Firm 1 earns more, and Firm 2 earns nothing
stay_out_outcome = g.add_outcome([3, 0], label="Stay Out")

# If Firm 2 enters and Firm 1 accommodates, both firms earn an equal amount
accommodate_outcome = g.add_outcome([2, 2], label="Accommodate")

# If Firm 2 enters and Firm 1 fights, Firm 2 earns more than Firm 1
fight_outcome = g.add_outcome([1, 3], label="Fight")

# Set the outcomes for each terminal node
g.set_outcome(g.root.children[1], stay_out_outcome)  # Firm 2 stays out
g.set_outcome(g.root.children[0].children[0], fight_outcome)  # Firm 2 enters, Firm 1 fights
g.set_outcome(g.root.children[0].children[1], accommodate_outcome)  # Firm 2 enters, Firm 1 accommodates

# Save the EFG
efg = g.write(format='native')
```

### Explanation:

1. **Game Setup**: We start by creating a new game tree with two players, "Firm 1" and "Firm 2". The game is titled "Market Entry Game".

2. **Firm 2's Decision**: Firm 2 has the first move, deciding whether to "Enter" the market or "Stay Out". This is represented by appending a move to the root node for Firm 2.

3. **Firm 1's Decision**: If Firm 2 decides to enter, Firm 1 then decides whether to "Fight" or "Accommodate". This is represented by appending a move to the node where Firm 2 has chosen to enter.

4. **Payoffs**: We define the payoffs for each possible outcome:
   - If Firm 2 stays out, Firm 1 earns more (3), and Firm 2 earns nothing (0).
   - If Firm 2 enters and Firm 1 accommodates, both firms earn an equal amount (2 each).
   - If Firm 2 enters and Firm 1 fights, Firm 2 earns more (3) than Firm 1 (1).

5. **Setting Outcomes**: We set the outcomes for each terminal node based on the decisions made by the firms.

6. **Save the EFG**: Finally, we save the extensive form game (EFG) in the native format.