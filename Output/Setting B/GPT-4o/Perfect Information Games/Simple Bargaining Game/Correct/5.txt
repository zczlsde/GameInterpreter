```python
import pygambit as gbt

# Create a new game tree with players A and B
g = gbt.Game.new_tree(players=["A", "B"], title="Negotiation Game")

# Step 1: A proposes the initial distribution plan
# A's only action is to propose the plan where A gets 5500 and B gets 4500
g.append_move(g.root, "A", ["Propose 5500/4500"])

# Step 2: B decides to accept or reject A's proposal
# B has two actions: Accept or Reject
g.append_move(g.root.children[0], "B", ["Accept", "Reject"])

# Step 3: If B accepts, the game ends with the proposed distribution
# Set the outcome for B accepting A's proposal
g.set_outcome(g.root.children[0].children[0], g.add_outcome([5500, 4500], label="B accepts A's proposal"))

# Step 4: If B rejects, B proposes an equal split
# B's only action is to propose an equal split of 5000 each
g.append_move(g.root.children[0].children[1], "B", ["Propose 5000/5000"])

# Step 5: A decides to accept or reject B's proposal
# A has two actions: Accept or Reject
g.append_move(g.root.children[0].children[1].children[0], "A", ["Accept", "Reject"])

# Step 6: If A accepts B's proposal, the game ends with the equal split
# Set the outcome for A accepting B's proposal
g.set_outcome(g.root.children[0].children[1].children[0].children[0], g.add_outcome([4750, 4750], label="A accepts B's proposal"))

# Step 7: If A rejects, A proposes a new plan
# A's only action is to propose a new plan where A gets 5200 and B gets 4800
g.append_move(g.root.children[0].children[1].children[0].children[1], "A", ["Propose 5200/4800"])

# Step 8: B must accept A's new proposal
# Set the outcome for B accepting A's new proposal
g.set_outcome(g.root.children[0].children[1].children[0].children[1].children[0], g.add_outcome([4693, 4332], label="B accepts A's new proposal"))

# Save the EFG
efg = g.write(format='native')
```