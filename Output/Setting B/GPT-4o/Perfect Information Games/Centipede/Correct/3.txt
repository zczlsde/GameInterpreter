```python
import pygambit as gbt

# Create a new game tree with two players: Alice and Bob
g = gbt.Game.new_tree(players=["Alice", "Bob"], title="Coin Doubling Game")

# Alice makes the first move: she can either "take" or "push"
g.append_move(g.root, "Alice", ["Take", "Push"])

# If Alice chooses "Take", the game ends with Alice taking the larger pile (4 coins) and Bob taking the smaller pile (1 coin)
alice_takes = g.add_outcome([4, 1], label="Alice takes")

# If Alice chooses "Push", the piles double and it's Bob's turn
g.append_move(g.root.children[1], "Bob", ["Take", "Push"])

# If Bob chooses "Take" after Alice's "Push", he takes the larger pile (8 coins) and Alice takes the smaller pile (2 coins)
bob_takes_after_alice_push = g.add_outcome([2, 8], label="Bob takes after Alice pushes")

# If Bob chooses "Push", the piles double again and it's Alice's turn
g.append_move(g.root.children[1].children[1], "Alice", ["Take", "Push"])

# If Alice chooses "Take" after both have pushed once, she takes the larger pile (16 coins) and Bob takes the smaller pile (4 coins)
alice_takes_after_both_push = g.add_outcome([16, 4], label="Alice takes after both push")

# If Alice chooses "Push" again, the piles double once more and it's Bob's turn
g.append_move(g.root.children[1].children[1].children[1], "Bob", ["Take", "Push"])

# If Bob chooses "Take" after both have pushed twice, he takes the larger pile (32 coins) and Alice takes the smaller pile (8 coins)
bob_takes_after_both_push_twice = g.add_outcome([8, 32], label="Bob takes after both push twice")

# If Bob chooses "Push" again, the piles double for the final time
# At the end of the game, if no one has taken, Alice receives the larger pile (64 coins) and Bob receives the smaller pile (16 coins)
final_push_outcome = g.add_outcome([64, 16], label="Final push outcome")

# Set the outcomes for each terminal node
g.set_outcome(g.root.children[0], alice_takes)
g.set_outcome(g.root.children[1].children[0], bob_takes_after_alice_push)
g.set_outcome(g.root.children[1].children[1].children[0], alice_takes_after_both_push)
g.set_outcome(g.root.children[1].children[1].children[1].children[0], bob_takes_after_both_push_twice)
g.set_outcome(g.root.children[1].children[1].children[1].children[1], final_push_outcome)

# Save the EFG
efg = g.write(format='native')
```