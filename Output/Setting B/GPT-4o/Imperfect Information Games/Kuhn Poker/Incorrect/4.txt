```python
import pygambit as gbt

# Create a new game tree with players Alice and Bob
g = gbt.Game.new_tree(players=["Alice", "Bob"],
                      title="Three-card poker game")

# Append a chance node to represent the dealing of cards with equal probabilities
g.append_move(g.root, g.players.chance, ["JQ", "JK", "QJ", "QK", "KJ", "KQ"])

# For each possible card allocation, define the game structure
for node in g.root.children:
    # Alice's decision node
    g.append_move(node, "Alice", ["Check", "Bet"])
    
    # Bob's decision node
    g.append_move(node.children[0], "Bob", ["Check", "Bet"])
    g.append_move(node.children[0].children[1], "Alice", ["Fold", "Call"])
    
    # Set Alice and Bob in the same information set as they don't know each other's cards
    g.set_infoset(node.children[0].children[1], node.children[0].children[1].infoset)
    
    g.append_move(node.children[1], "Bob", ["Fold", "Call"])
    g.append_move(node.children[1].children[1], "Alice", ["Fold", "Call"])
    
    # Set Alice and Bob in the same information set as they don't know each other's cards
    g.set_infoset(node.children[1].children[1], node.children[1].children[1].infoset)

# Define the outcomes for the game
alice_winsbig = g.add_outcome([2, -2], label="Alice wins big")
alice_wins = g.add_outcome([1, -1], label="Alice wins")
bob_winsbig = g.add_outcome([-2, 2], label="Bob wins big")
bob_wins = g.add_outcome([-1, 1], label="Bob wins")

# Set outcomes for each possible path in the game
g.set_outcome(g.root.children[0].children[0].children[0], alice_winsbig)
g.set_outcome(g.root.children[0].children[0].children[1], alice_wins)
g.set_outcome(g.root.children[0].children[1].children[0], bob_wins)
g.set_outcome(g.root.children[0].children[1].children[1].children[0], alice_winsbig)
g.set_outcome(g.root.children[0].children[1].children[1].children[1], alice_wins)
g.set_outcome(g.root.children[1].children[0].children[0], alice_wins)
g.set_outcome(g.root.children[1].children[0].children[1].children[0], bob_winsbig)
g.set_outcome(g.root.children[1].children[0].children[1].children[1], alice_wins)
g.set_outcome(g.root.children[1].children[1], bob_wins)

# Save the EFG
efg = g.write(format='native')
```