```python
# Step-by-step thought process:
# 1. There are two players, Player 1 and Player 2.
# 2. Player 1 moves first and has two possible actions: A and B.
# 3. Player 2 moves second and has two possible actions: X and Y.
# 4. Player 1 does not know which action Player 2 will take, leading to imperfect information.
# 5. Group Player 1's decision nodes in the same information set.

g.set_infoset(g.root.children[0], g.root.children[1].infoset)
```

```python
import pygambit as gbt

# Create a new extensive-form game with two players
g = gbt.Game.new_tree(players=["Player 1", "Player 2"],
                    title="Imperfect information game")

# Player 1's actions
g.append_move(g.root, "Player 1", ["S", "C"])

# Player 2's actions
g.append_move(g.root.children[0], "Player 2", ["S", "C"])
g.append_move(g.root.children[1], "Player 2", ["S", "C"])

# Set Player 1's decision nodes in the same information set
g.set_infoset(g.root.children[0], g.root.children[1].infoset)

# Define the payoffs for each combination
payoff_A = 3
payoff_B = 2
payoff_W = 1
payoff_D = 0
payoff_E = 4
payoff_F = -1

# Define outcomes based on the chosen combinations
outcome_SS = g.add_outcome([payoff_A, payoff_B], label="Both S")
outcome_SC = g.add_outcome([payoff_W, payoff_D], label="Player 1 S, Player 2 C")
outcome_CS = g.add_outcome([payoff_E, payoff_W], label="Player 1 C, Player 2 S")
outcome_CC = g.add_outcome([payoff_F, payoff_F], label="Both C")

# Set outcomes for each combination
g.set_outcome(g.root.children[0].children[0], outcome_SS)
g.set_outcome(g.root.children[0].children[1], outcome_SC)
g.set_outcome(g.root.children[1].children[0], outcome_CS)
g.set_outcome(g.root.children[1].children[1], outcome_CC)

# Save the EFG
efg = g.write(format='native')
```