```python
# Import the pygambit library
import pygambit as gbt

# Create a new game tree with two players, Alice and Bob
g = gbt.Game.new_tree(players=["Alice", "Bob"], title="Stone removal game")

# Alice starts the game by removing one or two stones
g.append_move(g.root, "Alice", ["Remove 1 stone", "Remove 2 stones"])

# Alice removes one stone
g.append_move(g.root.children[0], "Bob", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes two stones
g.append_move(g.root.children[1], "Bob", ["Remove 1 stone", "Remove 2 stones"])

# Alice removes one stone, Bob removes one stone
g.append_move(g.root.children[0].children[0], "Alice", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes one stone, Bob removes two stones
g.append_move(g.root.children[0].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes two stones, Bob removes one stone
g.append_move(g.root.children[1].children[0], "Alice", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes two stones, Bob removes two stones
g.append_move(g.root.children[1].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])

# Group the decision nodes for Alice and Bob in the same information set
g.set_infoset(g.root.children[0].children[0], g.root.children[0].children[1].infoset)
g.set_infoset(g.root.children[1].children[0], g.root.children[1].children[1].infoset)
g.set_infoset(g.root.children[0], g.root.children[1].infoset)

```

```python
# Import the pygambit library
import pygambit as gbt

# Create a new game tree with two players, Alice and Bob
g = gbt.Game.new_tree(players=["Alice", "Bob"], title="Stone removal game")

# Alice starts the game by removing one or two stones
g.append_move(g.root, "Alice", ["Remove 1 stone", "Remove 2 stones"])

# Alice removes one stone
g.append_move(g.root.children[0], "Bob", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes two stones
g.append_move(g.root.children[1], "Bob", ["Remove 1 stone", "Remove 2 stones"])

# Alice removes one stone, Bob removes one stone
g.append_move(g.root.children[0].children[0], "Alice", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes one stone, Bob removes two stones
g.append_move(g.root.children[0].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes two stones, Bob removes one stone
g.append_move(g.root.children[1].children[0], "Alice", ["Remove 1 stone", "Remove 2 stones"])
# Alice removes two stones, Bob removes two stones
g.append_move(g.root.children[1].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])

# Group the decision nodes for Alice and Bob in the same information set
g.set_infoset(g.root.children[0].children[0], g.root.children[0].children[1].infoset)
g.set_infoset(g.root.children[1].children[0], g.root.children[1].children[1].infoset)
g.set_infoset(g.root.children[0], g.root.children[1].infoset)
```