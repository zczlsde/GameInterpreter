```python
# Step-by-step thought process:
# 1. Alice starts the game with the decision to remove one or two stones.
# 2. If Alice removes one stone, Bob has the decision to remove one or two stones.
# 3. If Bob removes one stone, Alice again decides to remove one or two stones.
# 4. If Alice removes one stone, Bob has the choice to remove one or two stones.
# 5. If Bob removes one stone, Alice can remove one stone, leading to Alice losing the game.
# 6. If Bob removes two stones, Bob loses the game.
# 7. If Alice removes two stones, Bob can remove one stone, leading to Bob's loss.
# 8. If Bob removes two stones, Alice can remove one or two stones.
# 9. If Alice removes one stone, Bob can remove one stone, leading to Bob's loss.
# 10. If Alice removes two stones, Alice loses the game.
# 11. If Alice removes two stones initially, Bob has the option to remove one or two stones.
# 12. If Bob removes one stone, Alice can remove one or two stones.
# 13. If Alice removes one stone, Bob can remove one stone, leading to Bob's loss.
# 14. If Alice removes two stones, Alice loses the game.
# 15. If Bob removes two stones, Alice has only one stone left and loses.

g.set_infoset(g.root.children[0], g.root.children[1].infoset)
g.set_infoset(g.root.children[0].children[0], g.root.children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0], g.root.children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0].children[0], g.root.children[0].children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0].children[0].children[0], g.root.children[0].children[0].children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0].children[1], g.root.children[0].children[0].children[0].children[0].infoset)
g.set_infoset(g.root.children[0].children[0].children[1], g.root.children[0].children[0].children[0].infoset)
g.set_infoset(g.root.children[0].children[1], g.root.children[0].children[0].infoset)
g.set_infoset(g.root.children[0].children[1].children[0], g.root.children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[1].children[1], g.root.children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[1], g.root.children[0].infoset)
g.set_infoset(g.root.children[1].children[0], g.root.children[0].children[0].infoset)
g.set_infoset(g.root.children[1].children[1], g.root.children[0].children[0].infoset)
```

```python
import pygambit as gbt

g = gbt.Game.new_tree(players=["Alice", "Bob"],
                      title="Stone removal game")

g.append_move(g.root, "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0], "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[0], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[0].children[0], "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[0].children[0].children[0], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[0].children[0].children[1], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[0].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[0].children[1].children[0], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[0].children[1].children[1], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[0].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[1], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[1].children[0], "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[0].children[1].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[1].children[0], "Bob", ["Remove 1 stone", "Remove 2 stones"])
g.append_move(g.root.children[1].children[1], "Alice", ["Remove 1 stone", "Remove 2 stones"])

g.set_infoset(g.root.children[0], g.root.children[1].infoset)
g.set_infoset(g.root.children[0].children[0], g.root.children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0], g.root.children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0].children[0], g.root.children[0].children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0].children[0].children[0], g.root.children[0].children[0].children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[0].children[0].children[1], g.root.children[0].children[0].children[0].children[0].infoset)
g.set_infoset(g.root.children[0].children[0].children[1], g.root.children[0].children[0].children[0].infoset)
g.set_infoset(g.root.children[0].children[1], g.root.children[0].children[0].infoset)
g.set_infoset(g.root.children[0].children[1].children[0], g.root.children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[0].children[1].children[1], g.root.children[0].children[0].children[1].infoset)
g.set_infoset(g.root.children[1], g.root.children[0].infoset)
g.set_infoset(g.root.children[1].children[0], g.root.children[0].children[0].infoset)
g.set_infoset(g.root.children[1].children[1], g.root.children[0].children[0].infoset)

alice_loses = g.add_outcome([-1, 1], label="Alice loses")
bob_loses = g.add_outcome([1, -1], label="Bob loses")

g.set_outcome(g.root.children[0].children[0].children[0].children[0].children[0].children[0], alice_loses)
g.set_outcome(g.root.children[0].children[0].children[0].children[0].children[0].children[1], bob_loses)
g.set_outcome(g.root.children[0].children[0].children[0].children[0].children[1], bob_loses)
g.set_outcome(g.root.children[0].children[0].children[0].children[1].children[0], bob_loses)
g.set_outcome(g.root.children[0].children[0].children[0].children[1].children[1], alice_loses)
g.set_outcome(g.root.children[0].children[0].children[1], bob_loses)
g.set_outcome(g.root.children[0].children[1], alice_loses)
g.set_outcome(g.root.children[0].children[1].children[0], bob_loses)
g.set_outcome(g.root.children[0].children[1].children[1], alice_loses)
g.set_outcome(g.root.children[1].children[0], bob_loses)
g.set_outcome(g.root.children[1].children[1], alice_loses)

# Save the EFG
efg = g.write(format='native')
```